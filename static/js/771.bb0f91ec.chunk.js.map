{"version":3,"file":"static/js/771.bb0f91ec.chunk.js","mappings":"uRAEaA,EAAYC,EAAAA,EAAAA,IAAH,8CAITC,EAAQD,EAAAA,EAAAA,IAAH,4RAiBLE,EAAQF,EAAAA,EAAAA,GAAH,8XAoBLG,EAAOH,EAAAA,EAAAA,EAAH,8aAsBJI,EAAUJ,EAAAA,EAAAA,GAAH,sa,SClBpB,EA5CkB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACTC,EAAqED,EAArEC,MAAOC,EAA8DF,EAA9DE,OAAQC,EAAsDH,EAAtDG,aAAcC,EAAwCJ,EAAxCI,SAAUC,EAA8BL,EAA9BK,aAAcC,EAAgBN,EAAhBM,YACvDC,EAAc,IAAIC,KAAKL,GAAcM,cACrCC,GAAaL,EAAe,GAAM,KAAKM,QAAQ,GAC/CC,EAAM,yCAAqCN,GAEjD,OACI,2BACKM,IAAU,SAAChB,EAAD,CAAOiB,IAAKD,EAAQE,IAAKb,KACpC,UAACP,EAAD,YACI,UAACG,EAAD,WACKI,EADL,IAEEM,EAFF,OAICG,IAAY,UAACZ,EAAD,yBAAkBY,EAAlB,QACb,SAACX,EAAD,wBACA,SAACD,EAAD,UAAOM,KACP,SAACL,EAAD,qBACCG,GAAUA,EAAOa,OAAS,GACvB,SAACjB,EAAD,UACKI,EAAO,IAAMA,EAAO,GAAGc,QAGhC,qEAKf,E,QC5BYC,GAAatB,EAAAA,EAAAA,GAAOuB,EAAAA,GAAPvB,CAAH,oDAIVwB,EAASxB,EAAAA,EAAAA,OAAH,ybAsBNE,EAAQF,EAAAA,EAAAA,GAAH,sPCYlB,EAlCqB,WAAO,IAAD,IACvB,GAA0CyB,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAgBhD,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,mCAAG,WAAMT,GAAN,iGAEQU,EAAAA,EAAAA,IAAgBV,GAFxB,OAEbW,EAFa,OAGnBZ,EAAiBY,GAHE,gDAKnBC,QAAQC,IAAR,MALmB,yDAAH,sDAQxBJ,EAAmBT,EACtB,GAAE,CAACA,KAGA,4BACI,SAACN,EAAD,CAAYoB,GAAIV,EAASW,QAAzB,UACI,SAACnB,EAAD,CAAQoB,KAAK,SAAb,wBAEJ,SAAC,EAAD,0BACA,SAAC,EAAD,CAAWvC,MAAOqB,KAClB,SAAC,EAAAmB,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C,8ICrCKC,EAAU,mCACVC,EAAW,+BAIJC,EAAkB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,wCACwBD,IAFjB,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDASlBC,EAAiB,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACiBD,EADjB,kBACkCM,EADlC,YADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDASjBb,EAAe,mCAAG,WAAMV,GAAN,yFACJsB,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEpB,EADF,oBACqBmB,IAFjB,uBACnBI,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    padding: 0 50px;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    margin: auto;\n    width: 280px;\n    height: 402px;\n\n    @media (min-width: 768px) {\n        width: 336px;\n        height: 455px;\n    };\n\n    @media (min-width: 1280px) {\n        width: 395px;\n        height: 574px;\n    };\n`;\n\nexport const Title = styled.h1`\n    display: block;\n    margin: 20px auto;\n    font-family: 'Roboto';\n    font-size: 18px;\n    font-weight: 700;\n    line-height: normal;\n    font-style: normal;\n    text-transform: uppercase;\n    color: #000;\n\n    @media (min-width: 768px) {\n        font-size: 20px;\n    };\n\n    @media (min-width: 1280px) {\n        font-size: 30px;\n    };\n`;\n\nexport const Text = styled.p`\n    margin: 20px 0;\n    max-width: 280px;\n    text-align: justify;\n    font-family: 'Roboto';\n    font-size: 12px;\n    font-weight: 400;\n    line-height: normal;\n    font-style: normal;\n    color: #000;\n\n    @media (min-width: 768px) {\n        max-width: 720px;\n        font-size: 16px;\n    };\n\n    @media (min-width: 1280px) {\n        max-width: 1240px;\n        font-size: 28px;\n    };\n`;\n\nexport const Article = styled.h3`\n    width: 280px;\n    margin: 20px 0;\n    font-family: 'Roboto';\n    font-size: 14px;\n    font-weight: 700;\n    line-height: normal;\n    font-style: normal;\n    text-transform: uppercase;\n    color: red;\n\n    @media (min-width: 768px) {\n        width: 336px;\n        font-size: 16px;\n    };\n\n    @media (min-width: 1280px) {\n        width: 395px;\n        font-size: 28px;\n    };\n`;","import PropTypes from 'prop-types';\nimport { Container, Image, Title, Text, Article } from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n    const { title, genres, release_date, overview, vote_average, poster_path } = movie;\n    const releaseDate = new Date(release_date).getFullYear();\n    const userRate = ((vote_average / 10) * 100).toFixed(0);\n    const imgURL = `https://image.tmdb.org/t/p/w300${poster_path}`;\n\n    return (\n        <div>\n            {imgURL && <Image src={imgURL} alt={title} />}\n            <Container>\n                <Title>\n                    {title}  \n                ({releaseDate})\n                </Title>\n                {userRate && <Text>User rate: {userRate}%</Text>}\n                <Article>Overview</Article>\n                <Text>{overview}</Text>\n                <Article>Genres</Article> \n                {genres && genres.length > 0 ? (\n                    <Text>\n                        {genres[0] && genres[0].name}\n                    </Text>\n                ) : (\n                <p>There is no information about genres</p>\n                )}\n            </Container>\n        </div>\n    );\n};\n\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string,\n        release_date: PropTypes.string,\n        overview: PropTypes.string,\n        vote_average: PropTypes.number,\n        poster_path: PropTypes.string,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({ name: PropTypes.string.isRequired })\n        ),\n    }).isRequired,\n};\n\nexport default MovieCard;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport const Button = styled.button`\n    display: block;\n    margin: 16px auto;\n    background: #fff;\n    color: red;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    transition: background 0.3s, transform 0.2s;\n\n    &:hover {\n        background: red;\n        color: #fff;\n    };\n\n    @media (min-width: 768px) {\n        padding: 10px 20px;\n    };\n`;\n\nexport const Title = styled.h1`\n    text-align: center;\n    margin-top: 16px;\n    font-family: 'Roboto';\n    font-size: 40px;\n    font-weight: 700;\n    line-height: normal;\n    font-style: normal;\n    text-transform: uppercase;\n    color: #000;\n`;","import { Suspense } from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { fetchInfoMovies } from \"utils/api\";\nimport MovieCard from \"components/MovieCard/MovieCard\";\nimport { StyledLink, Button, Title } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const [selectedMovie, setSelectedMovie] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/');\n\n    // movie request\n\n    useEffect(() => {\n        const fetchSelectedMovie = async movieId => {\n            try {\n                const movieResults = await fetchInfoMovies(movieId);\n                setSelectedMovie(movieResults);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchSelectedMovie(movieId);\n    }, [movieId]);\n\n    return (\n        <div>\n            <StyledLink to={backLink.current}>\n                <Button type=\"button\">Go back</Button>\n            </StyledLink>\n            <Title>Movie info</Title>\n            <MovieCard movie={selectedMovie} />\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = '4a3136bad29614034a217fa6beb2440a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// fetch popular movies\n\nexport const fetchPopularMovies = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies by search\n\nexport const fetchSearchMovies = async query => {\n    const { data } = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return data;\n};\n\n// fetch movies`s info\n\nexport const fetchInfoMovies = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies`s video\n\nexport const fetchVideoMovie = async movieId => {\n    const { results } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    return results;\n};"],"names":["Container","styled","Image","Title","Text","Article","movie","title","genres","release_date","overview","vote_average","poster_path","releaseDate","Date","getFullYear","userRate","toFixed","imgURL","src","alt","length","name","StyledLink","Link","Button","useState","selectedMovie","setSelectedMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchSelectedMovie","fetchInfoMovies","movieResults","console","log","to","current","type","Suspense","fallback","API_KEY","BASE_URL","fetchPopularMovies","axios","data","fetchSearchMovies","query"],"sourceRoot":""}