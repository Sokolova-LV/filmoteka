{"version":3,"file":"static/js/116.865e5d43.chunk.js","mappings":"6RAEaA,EAAOC,EAAAA,EAAAA,KAAH,kEAKJC,EAAQD,EAAAA,EAAAA,MAAH,wIAQLE,EAASF,EAAAA,EAAAA,OAAH,kP,SCenB,EA1BoB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SAYnB,OACI,0BACI,UAACJ,EAAD,CAAMI,SAbO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,MACjCH,GAILH,EAASG,GACTF,EAAEG,OAAOG,SAJLC,EAAAA,GAAAA,MAAA,iDAKP,EAIO,WACI,SAACV,EAAD,CAAOW,KAAK,QAAQC,KAAK,UACzB,SAACX,EAAD,CAAQW,KAAK,SAAb,wBAIf,EC6BD,EA/Ce,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNhB,EAAK,UAAGc,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAKjB,EAAL,CAEA,IAAMkB,EAAQ,mCAAG,gHAEiBC,EAAAA,EAAAA,IAAkBnB,GAFnC,mBAGc,KADfoB,EAFC,EAEDA,SACIC,OAHH,gBAILhB,EAAAA,GAAAA,MAAA,uCAJK,8BAMLK,EAAUU,GANL,6EAUTf,EAAAA,GAAAA,MAAY,KAAMiB,SAClBZ,EAAU,IAXD,0DAAH,qDAcdQ,GAhBkB,CAiBrB,GAAE,CAACJ,IAOJ,OACI,6BACI,SAAC,EAAD,CAAajB,SANA,SAAAG,GACjBe,EAAgB,CAAEf,MAAAA,GACrB,KAKO,wBACKS,EAAOc,KAAI,SAAAC,GAAK,OACb,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMjB,GAAhD,SACKa,EAAMK,SAFNL,EAAME,GADF,QAUhC,C,8LCjDKI,EAAU,mCACVC,EAAW,+BAIJC,EAAkB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,uCACuBD,IAFhB,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDASlBf,EAAiB,mCAAG,WAAMnB,GAAN,yFACNiC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACiBD,EADjB,kBACkC9B,EADlC,YADM,uBACrBkC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACJH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEK,EADF,oBACqBN,IAFjB,uBACnBI,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDASfG,EAAe,mCAAG,WAAMD,GAAN,yFACJH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEK,EADF,4BAC6BN,IAFzB,uBACnBI,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDASfI,EAAkB,mCAAG,WAAMF,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEK,EADF,4BAC6BN,IAFtB,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx","utils/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n    max-width: 300px;\n    margin: 64px;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    padding: 10px;\n    margin: 5px 0;\n    border: 1px solid #ccc;\n    border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n    background-color: #FF69B4;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 3px;\n\n    :hover,\n    :focus {\n        background-color: #8A2BE2;\n        cursor: pointer;\n    };\n`;","import PropTypes from \"prop-types\";\nimport toast from \"react-hot-toast\";\nimport { Form, Input, Button } from './SearchMovie.styled';\n\nconst SearchMovie = ({ onSubmit }) => {\n    const handleSubmit = e => {\n        e.preventDefault();\n        const query = e.target.elements.query.value;\n        if (!query) {\n            toast.error(`String cannot be empty. Please, text something`);\n            return;\n        }\n        onSubmit(query);\n        e.target.reset();\n    };\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <Input name='query' type='text' />\n                <Button type=\"submit\">Search</Button>\n            </Form>\n        </div>\n    );\n};\n\nSearchMovie.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchMovie;","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { fetchSearchMovies } from \"utils/api\";\nimport SearchMovie from \"components/SearchMovie/SearchMovie\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]); \n    const location = useLocation(); \n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        if (!query) return;\n\n        const getMovie = async () => {\n            try {\n                const { results } = await fetchSearchMovies(query);\n                if (results.length === 0) {\n                    toast.error(`Movie not found. Please, try again.`);\n                } else {\n                    setMovies(results);\n                    return;\n                }\n            } catch (error) {\n                toast.error(error.message);\n                setMovies([]);\n            }\n        };\n        getMovie();\n    }, [searchParams]);\n\n    // movie searching\n    const handleSubmit = query => {\n        setSearchParams({ query });\n    };\n\n    return (\n        <main>\n            <SearchMovie onSubmit={handleSubmit}/>\n            <ul>\n                {movies.map(movie => (\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                            {movie.title}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </main>\n    );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = '4a3136bad29614034a217fa6beb2440a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// fetch popular movies\n\nexport const fetchPopularMovies = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies by search\n\nexport const fetchSearchMovies = async query => {\n    const { data } = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return data;\n};\n\n// fetch movies`s info\n\nexport const fetchInfoMovies = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies`s cast\n\nexport const fetchCastMovies = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies`s reviews\n\nexport const fetchReviewsMovies = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n};"],"names":["Form","styled","Input","Button","onSubmit","e","preventDefault","query","target","elements","value","reset","toast","name","type","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovie","fetchSearchMovies","results","length","message","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchPopularMovies","axios","data","fetchInfoMovies","movieId","fetchCastMovies","fetchReviewsMovies"],"sourceRoot":""}