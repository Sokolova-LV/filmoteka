{"version":3,"file":"static/js/903.a54f6eca.chunk.js","mappings":"gSAEaA,EAAOC,EAAAA,EAAAA,KAAH,sSAgBJC,EAAQD,EAAAA,EAAAA,MAAH,6gBA0BLE,EAASF,EAAAA,EAAAA,OAAH,4Y,SCdnB,EA1BoB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SAYnB,OACI,0BACI,UAACJ,EAAD,CAAMI,SAbO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,MAClCH,GAIJH,EAASG,GACTF,EAAEG,OAAOG,SAJLC,EAAAA,GAAAA,MAAA,kDAKP,EAIO,WACI,SAACV,EAAD,CAAOW,KAAK,OAAOC,KAAK,QAAQC,YAAY,kBAC5C,SAACZ,EAAD,CAAQU,KAAK,SAAb,wBAIf,ECrBYG,EAAYf,EAAAA,EAAAA,IAAH,8BAITgB,EAAOhB,EAAAA,EAAAA,GAAH,uUAoBJiB,EAAOjB,EAAAA,EAAAA,GAAH,8BAIJkB,GAAalB,EAAAA,EAAAA,GAAOmB,EAAAA,GAAPnB,CAAH,oDAIVoB,EAAQpB,EAAAA,EAAAA,IAAH,oPAeLqB,EAAQrB,EAAAA,EAAAA,GAAH,scC7BlB,EAnBuB,SAAC,GAAsB,IAApBsB,EAAmB,EAAnBA,aAGtB,OACI,SAACP,EAAD,WACI,SAACC,EAAD,UACKM,EAAaC,KAAI,SAAAC,GAAW,OACzB,SAACP,EAAD,WACI,UAACC,EAAD,CAAYO,GAAE,kBAAaD,EAAYE,IAAvC,WACI,SAACN,EAAD,CAAOO,IARd,mCAQ8BH,EAAYI,YAAaC,IAAKL,EAAYM,SACjE,SAACT,EAAD,UAAQG,EAAYM,YAHjBN,EAAYE,GADE,OAW5C,EC2BD,EAvCe,WACX,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOT,EAAP,KAAqBU,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACN9B,EAAK,UAAG4B,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAK/B,EAAL,CAEA,IAAMgC,EAAQ,mCAAG,gHAEiBC,EAAAA,EAAAA,IAAkBjC,GAFnC,mBAGc,KADfkC,EAFC,EAEDA,SACIC,OAHH,gBAIL9B,EAAAA,GAAAA,MAAA,uCAJK,8BAMLqB,EAAgBQ,GANX,6EAUT7B,EAAAA,GAAAA,MAAY,KAAM+B,SAClBV,EAAgB,IAXP,0DAAH,qDAcdM,GAhBkB,CAiBrB,GAAE,CAACJ,IAOJ,OACI,6BACI,SAAC,EAAD,CAAa/B,SANA,SAAAG,GACjB6B,EAAgB,CAAE7B,MAAAA,GACrB,KAKO,SAAC,EAAD,CAAgBgB,aAAcA,MAGzC,C,8IC1CKqB,EAAU,mCACVC,EAAW,+BAIJC,EAAkB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,wCACwBD,IAFjB,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDASlBR,EAAiB,mCAAG,WAAMjC,GAAN,yFACNwC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACiBD,EADjB,kBACkCrC,EADlC,YADM,uBACrByC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACJH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEK,EADF,oBACqBN,IAFjB,uBACnBI,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD","sources":["components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","components/MoviesBySearch/MoviesBySearch.styled.jsx","components/MoviesBySearch/MoviesBySearch.jsx","pages/Movies.jsx","utils/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    margin: 40px auto;\n    border-bottom: 1px solid #fff;\n    width: 160px;\n\n    @media (min-width: 768px) {\n        min-width: 336px;\n    };\n\n    @media (min-width: 1280px) {\n        min-width: 394px;\n    };\n`;\n\nexport const Input = styled.input`\n    font-size: 16px;\n    margin-right: 10px;\n    min-width: 160px;\n    border: 1px solid red;\n    background-color: transparent;\n    color: #000;\n\n    @media (min-width: 768px) {\n        min-width: 336px;\n    }\n\n    @media (min-width: 1280px) {\n        min-width: 394px;\n    }\n\n    &::placeholder {\n        font-family: 'Roboto', sans-serif;\n        font-size: 14px;\n        font-weight: 400;\n        font-style: normal;\n        line-height: normal;\n        color: #fff;\n    };\n`;\n\nexport const Button = styled.button`\n    background: #fff;\n    color: red;\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    transition: background 0.3s, transform 0.2s;\n\n    &:hover {\n        background: red;\n        color: #fff;\n    };\n\n    @media (min-width: 768px) {\n        padding: 10px 20px;\n    };\n`;","import PropTypes from \"prop-types\";\nimport toast from \"react-hot-toast\";\nimport { Form, Input, Button } from \"./SearchMovie.styled\";\n\nconst SearchMovie = ({ onSubmit }) => {\n    const handleSubmit = e => {\n        e.preventDefault();\n        const query = e.target.elements.query.value;\n        if(!query) {\n            toast.error(`String cannot be empty. Please, text something.`);\n            return;\n        }\n        onSubmit(query);\n        e.target.reset();\n    };\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <Input type=\"text\" name=\"query\" placeholder=\"Movie search\"/>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n        </div>\n    );\n};\n\nSearchMovie.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchMovie;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n    \n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    padding: 0;\n    margin: 0;\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 20px;\n\n    @media (min-width: 768px) {\n        margin-top: 60px;\n        gap: 32px;\n    };\n\n    @media (min-width: 1280px) {\n        gap: 16px;\n    };\n`;\n\nexport const Item = styled.li`\n    \n`;\n\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport const Image = styled.img`\n    width: 280px;\n    height: 402px;\n\n    @media (min-width: 768px) {\n        width: 336px;\n        height: 455px;\n    };\n\n    @media (min-width: 1280px) {\n        width: 395px;\n        height: 574px;\n    };\n`;\n\nexport const Title = styled.h3`\n    width: 280px;\n    margin-top: 8px;\n    font-family: 'Roboto';\n    font-size: 12px;\n    font-weight: 700;\n    line-height: normal;\n    font-style: normal;\n    text-transform: uppercase;\n    color: #000;\n\n    @media (min-width: 768px) {\n        width: 336px;\n        line-height: 16px;\n    };\n\n    @media (min-width: 1280px) {\n        width: 395px;\n        font-size: 20px;\n        line-height: 24px;\n    };\n`;","import { Container, Item, List, StyledLink, Image, Title } from \"./MoviesBySearch.styled\";\n\nconst MoviesBySearch = ({ searchMovies }) => {\n    const IMG_PATH = 'https://image.tmdb.org/t/p/w1280';\n\n    return (\n        <Container>\n            <List>\n                {searchMovies.map(searchMovie => (\n                    <Item key={searchMovie.id}>\n                        <StyledLink to={`/movies/${searchMovie.id}`}>\n                            <Image src={IMG_PATH + searchMovie.poster_path} alt={searchMovie.title} />\n                            <Title>{searchMovie.title}</Title>\n                        </StyledLink>\n                    </Item>\n                ))}\n            </List>\n        </Container>\n    );\n};\n\nexport default MoviesBySearch;","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { fetchSearchMovies } from \"utils/api\";\nimport SearchMovie from \"components/SearchMovie/SearchMovie\";\nimport MoviesBySearch from \"components/MoviesBySearch/MoviesBySearch\";\n\nconst Movies = () => {\n    const [searchMovies, setSearchMovies] = useState([]); \n    //const location = useLocation(); \n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        if (!query) return;\n\n        const getMovie = async () => {\n            try {\n                const { results } = await fetchSearchMovies(query);\n                if (results.length === 0) {\n                    toast.error(`Movie not found. Please, try again.`);\n                } else {\n                    setSearchMovies(results);\n                    return;\n                }\n            } catch (error) {\n                toast.error(error.message);\n                setSearchMovies([]);\n            }\n        };\n        getMovie();\n    }, [searchParams]);\n\n    // movie searching\n    const handleSubmit = query => {\n        setSearchParams({ query });\n    };\n\n    return (\n        <main>\n            <SearchMovie onSubmit={handleSubmit}/>\n            <MoviesBySearch searchMovies={searchMovies}/>\n        </main>\n    );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = '4a3136bad29614034a217fa6beb2440a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// fetch popular movies\n\nexport const fetchPopularMovies = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies by search\n\nexport const fetchSearchMovies = async query => {\n    const { data } = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return data;\n};\n\n// fetch movies`s info\n\nexport const fetchInfoMovies = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n};\n\n// fetch movies`s video\n\nexport const fetchVideoMovie = async movieId => {\n    const { results } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\n    );\n    return results;\n};"],"names":["Form","styled","Input","Button","onSubmit","e","preventDefault","query","target","elements","value","reset","toast","type","name","placeholder","Container","List","Item","StyledLink","Link","Image","Title","searchMovies","map","searchMovie","to","id","src","poster_path","alt","title","useState","setSearchMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovie","fetchSearchMovies","results","length","message","API_KEY","BASE_URL","fetchPopularMovies","axios","data","fetchInfoMovies","movieId"],"sourceRoot":""}